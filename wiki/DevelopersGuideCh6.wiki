#summary Developers Guide Chapter 6 - Using Remote Admin Support
#labels Phase-Implementation
#sidebar DevelopersGuideTOC

= Using Remote Admin Support =

Our server EchoServer, works fine. Lets say we need to modify few server configuration like Timeout message or Max Auth try message or max times authorization try can be done per session (maxAuthTry).. may be remotely, this is supported by QuickServer.

We need an admin server that will control our server todo the above mentioned task has well as much other control function without changing server code or even shutdown the server when that is running. 

This server is implemented by QuickServer library has another QuickServer implementation called 

{{{
org.quickserver.net.qsadmin.QSAdminServer
}}}

To use this feature all we have to do is call {{{startQSAdminServer()}}} method of {{{QuickServer}}} object. The default port on which {{{QSAdminServer}}} will run on is 9876, this can be changed by using any of the two methods
{{{
quickserver.setQSAdminServerPort(4124);
//or
quickserver.getQSAdminServer().getServer().setPort(4124);
}}}

Bellow is the new code that has enabled QSAdminServer for EchoServer on port 4124.

{{{
//EchoServer .java
package echoserver;

import org.quickserver.net.*;
import org.quickserver.net.server.*;

import java.io.*;

public class EchoServer {
  public static void main(String s[])  {
    
    String cmd  = "echoserver.EchoCommandHandler";
    String auth = "echoserver.EchoServerQuickAuthenticator";
    String data = "echoserver.EchoServerPoolableData"; //Poolable

    QuickServer myServer = new QuickServer(cmd);
    myServer.setAuthenticator(auth); 
    myServer.setClientData(data);

    myServer.setPort(4123);
    myServer.setName("Echo Server v 1.0");

    //config QSAdminServer 
    myServer.setQSAdminServerPort(4124);
    myServer.getQSAdminServer().getServer().setName("EchoAdmin v 1.0");
    try  {
      myServer.startQSAdminServer();
      myServer.startServer();
    } catch(AppException e){
      System.out.println("Error in server : "+e);
    }
  }
}
}}}

So we have defined our QSAdminServer to run on 4124 port.. but what will the Authentication used? 

If no explicit Authenticator is set then QSAdminServer will use {{{org.quickserver.net.qsadmin.Authenticator}}} has its Authenticator. If we check the [APIDocumentation APIDocumentation] we find that is a very simple, is username and password is hard coded has

{{{
Username : Admin
Password  : QsAdm1n 
}}}

So, now lets compile the new program and run it, it should show the output has bellow indicating admin server is running on 4124 port.

{{{
Loading QuickServer v1.4.8 [PID:4748]... Done

-------------------------------
 Name : EchoAdmin v 1.0
 Port : 4124
-------------------------------


-------------------------------
 Name : Echo Server v 1.0
 Port : 4123
-------------------------------
}}}

Start the QSAdmin GUI using following command
{{{
java -jar QSAdminGUI.jar
}}}

On Windows you can also do the following:
Clicking on batch file “QsAdminGUI.bat” located under bin directory of QuickServer installation. 

On Linux/Unix you can also do the following:
Clicking/Executing on batch file “QsAdminGUI.sh” located under bin directory of QuickServer installation. 

The GUI should be some thing like this
